
# Name your project! Project names should contain only lowercase characters
# and underscores. A good package name should reflect your organization's
# name or the intended use of these models
name: 'medic_info'
version: '1.0.0'

# This setting configures which "profile" dbt uses for this project.
profile: 'medic_info'

# These configurations specify where dbt should look for different types of files.
# The `model-paths` config, for example, states that models in this project can be
# found in the "models/" directory. You probably won't need to change these!
model-paths: ["models"]
analysis-paths: ["analyses"]
test-paths: ["tests"]
seed-paths: ["seeds"]
macro-paths: ["macros"]
snapshot-paths: ["snapshots"]

clean-targets:         # directories to be removed by `dbt clean`
  - "target"
  - "dbt_packages"


# Configuring models
# Full documentation: https://docs.getdbt.com/docs/configuring-models

# In this example config, we tell dbt to build all models in the example/
# directory as views. These settings can be overridden in the individual model
# files using the `{{ config(...) }}` macro.
#models:
#  medic_info:
#    # Config indicated by + and applies to all files under models/example/
#    example:
#      +materialized: view


# Configuring models
#models:
 # medic_info_processed:
  #  # Apply these configurations to all models within the `models/medic_info` folder
   # my_model_folder:   # Update this to match the actual folder where your model is stored
    #  +materialized: table

      # Add a pre-hook to load the CSV into your Postgres table before the DBT model runs
      #pre-hook: 
       # - "COPY medic_info_raw(date, sender, content) FROM 'C:/Users/bam/Desktop/Week-7/notebooks/cleaned_data.csv' DELIMITER ',' CSV HEADER;"



# Configuring models
models:
  medic_info:
    medic_info_processed:
      +materialized: table  # Ensure this model is created as a table
